include supercrouch
include palette
include balancing
include animmain

// States / Object detection (required due to many object interactions using the running state)
constant u8 char.state.TWIRLJUMP = 0x12
constant u8 char.state.FALLING = 0x30
global bool isOnSpinningTop = false
global bool isOnMHZElevators = false
global bool isInAir = false //air

// Mod Options
global u8 twirlOn = 0
global u8 peelOutStyle = 0
global u8 smoothAnimation = 1 // Turn off the smooth animation (on by default)
global u8 fallAnim = 1

// Timers for animations
global u64 idleTime = 0
global s32 lookUpTime = 0
global s32 lookDownTime = 0
global s32 hangTimer = 0
global s32 bounce = 0 // Correct advertising
global u8 peelTimer = 0
global u8 skidTimer = 0
global u8 runTimer = 0
global u8 landTimer = 0
global u8 maxLandFrame = 20 // When the animation should end
global u64 FallTimer = 0 // How long you have been in air
// global u8 monkeyBarTimer = 0 (Too lazy to properly implement)

// Springs

//# address-hook(0x022f98) end(0x02304a)
function void SpringVertical.ApplyToCharacter()
{
	base.SpringVertical.ApplyToCharacter()
	if (objA0.subtype2c & 0x01) && (twirlOn == 1)
		objA1.state = char.state.TWIRLJUMP
}

//MGZ Spinning Tops

//# address-hook(0x034c54) end(0x034d8c)
function void fn034c54()
{
	base.fn034c54()
	isOnSpinningTop = true
}

// MHZ elevators

//# address-hook(0x03e658) end(0x03e680)
function void fn03e658()
{
	base.fn03e658()
	isOnMHZElevators = true
	
	if (objA1.animation.sprite == 0x92 || objA1.animation.sprite == 0x91)
	{
		if (hangTimer < 17)
			hangTimer++
	}
	else if (hangTimer > 0)
		hangTimer--
}

// CNZ Balloons

//# address-hook(0x0317ae) end(0x03181c)
function void fn0317ae()
{
	base.fn0317ae()

	if (objA1.state != char.state.ROLLING)
		objA1.state = char.state.STRAIGHTJUMP

}

//# address-hook(0x010bba) end(0x010c8e)
function void Character.UpdateNormalState.Sonic()
{
	base.Character.UpdateNormalState.Sonic()
	Character.StateTrackUpdate()
}

function void Character.StateTrackUpdate()
{
	if (char.flags & char.flag.IN_AIR)
		isInAir = true // ONLY FOR THE SUMMERSAULT LANDING ANIMATION

	if (char.velocity.y > 0 && isInAir && char.state == char.state.TWIRLJUMP)
	{
		if (fallAnim != 0)
			char.state = char.state.FALLING
		else
			char.state = char.state.RUNNING
	}
	
	if ((char.flags & char.flag.IN_AIR == 0) || char.state != char.state.RUNNING)
		isOnSpinningTop = false
	
	if (char.state != char.state.HANGING)
		isOnMHZElevators = false

	if ((char.flags & char.flag.IN_AIR == 0) && char.state == char.state.FALLING)
		char.state = char.state.RUNNING

	if (bounce > 0)
		bounce--

	if ((char.flags & char.flag.IN_AIR == 0) || char.state == char.state.ROLLING)
		bounce = 0
	

}